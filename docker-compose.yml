version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: trustgambit-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: trustgambit
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme123}
      POSTGRES_DB: trustgambit
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trustgambit"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (optional - for production Socket.io)
  redis:
    image: redis:7-alpine
    container_name: trustgambit-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: trustgambit-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      # Database
      DATABASE_URL: postgresql://trustgambit:${POSTGRES_PASSWORD:-changeme123}@postgres:5432/trustgambit
      
      # NextAuth
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3000}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-your-super-secret-key-change-this-in-production}
      
      # Redis (optional)
      REDIS_URL: redis://redis:6379
      
      # Node environment
      NODE_ENV: production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: sh -c "npx prisma migrate deploy && node server.js"

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
